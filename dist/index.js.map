{"version":3,"sources":["ibm-carbon-scale.js","get.js","is.js","mem.js","noop.js","uuid.js","to-rem.js","ratios.js","index.js"],"names":["exports","scale","params","length","minSize","intervals","increment","transform","v","getSize","count","Math","floor","Array","from","_","i","map","get","obj","key","def","p","undef","split","is","truthy","n","exists","undefined","array","isArray","num","Number","isNaN","func","f","object","emptyObject","Object","entries","constructor","string","str","prototype","toString","call","mem","String","noop","uuid","prefix","random","substring","Date","now","toRem","root","px","OCTAVE","DOUBLE_OCTAVE","GOLDEN_RATIO","PHI","PERFECT_FIFTH","PERFECT_FOURTH","AUGMENTED_FOURTH","MAJOR_ELEVENTH","MAJOR_SECOND","MAJOR_SEVENTH","MAJOR_SIXTH","MAJOR_TENTH","MAJOR_THIRD","MAJOR_TWELFTH","MINOR_SECOND","MINOR_SEVENTH","MINOR_THIRD"],"mappings":"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","file":"index.js","sourceRoot":"../lib","sourcesContent":["exports.scale = (params = {}) => {\n  const {\n    length = 20,\n    minSize = 12,\n    intervals = 4,\n    increment = 2,\n    transform = v => v\n  } = params;\n\n  const getSize = count => {\n    if (count <= 1) {\n      return minSize;\n    }\n\n    return (\n      getSize(count - 1) + Math.floor((count - 2) / intervals + 1) * increment\n    );\n  };\n\n  return Array.from({ length: length }, (_, i) => getSize(i + 1)).map(\n    transform\n  );\n};\n","// based on https://github.com/developit/dlv\nexport const get = (obj, key, def, p, undef) => {\n  key = key && key.split ? key.split('.') : [key];\n  for (p = 0; p < key.length; p++) {\n    obj = obj ? obj[key[p]] : undef;\n  }\n  return obj === undef ? def : obj;\n};\n","export const is = {\n  truthy: n => n !== undefined && n !== null && n !== false,\n  exists: n => n !== undefined && n !== null,\n  undefined: n => n === undefined,\n  array: n => Array.isArray(n),\n  num: n => typeof n === 'number' && !Number.isNaN(n),\n  func: f => typeof f === 'function',\n  object: n => typeof n === 'object' && n !== null,\n  emptyObject: obj =>\n    Object.entries(obj).length === 0 && obj.constructor === Object,\n  string: str => Object.prototype.toString.call(str) === '[object String]'\n};\n","export const mem = func => {\n  const mem = {};\n  return (...params) => {\n    const key = String(params);\n    if (!mem[key]) {\n      mem[key] = func(...params);\n    }\n    return mem[key];\n  };\n};\n","export const noop = n => n;\n","export const uuid = prefix =>\n  `${prefix}-${Math.random()\n    .toString(36)\n    .substring(2) + Date.now().toString(36)}`;\n","export const toRem = root => px => px / root;\n","exports.OCTAVE = 2;\nexports.DOUBLE_OCTAVE = 4;\n\nexports.GOLDEN_RATIO = 1.618034;\nexports.PHI = 1.618034;\n\nexports.PERFECT_FIFTH = 1.5;\nexports.PERFECT_FOURTH = 1.333333333;\nexports.AUGMENTED_FOURTH = 1.41421;\n\nexports.MAJOR_ELEVENTH = 2.666666667;\nexports.MAJOR_SECOND = 1.125;\nexports.MAJOR_SEVENTH = 1.875;\nexports.MAJOR_SIXTH = 1.666666667;\nexports.MAJOR_TENTH = 2.5;\nexports.MAJOR_THIRD = 1.25;\nexports.MAJOR_TWELFTH = 3;\n\nexports.MINOR_SECOND = 1.066666667;\nexports.MINOR_SEVENTH = 1.777777778;\nexports.MINOR_THIRD = 1.2;\n","export { scale as ibmCarbonScale } from './ibm-carbon-scale';\nexport * from './get';\nexport * from './is';\nexport * from './mem';\nexport * from './noop';\nexport * from './uuid';\nexport * from './to-rem';\nexport * from './ratios';\n"]}